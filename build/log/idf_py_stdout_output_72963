[1/12] Linking C static library esp-idf/sensor-dsp/libsensor-dsp.a
[2/12] Performing build step for 'bootloader'
[1/1] cd /Users/ahhyun/esp/esp-idf/examples/rd_esp32_code-example-presence-sensing/build/bootloader/esp-idf/esptool_py && /Users/ahhyun/.espressif/python_env/idf5.3_py3.12_env/bin/python /Users/ahhyun/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/ahhyun/esp/esp-idf/examples/rd_esp32_code-example-presence-sensing/build/bootloader/bootloader.bin
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[3/12] No install step for 'bootloader'
[4/12] Building C object esp-idf/sensor-xensiv-bgt60trxx/CMakeFiles/__idf_sensor-xensiv-bgt60trxx.dir/xensiv_bgt60trxx_esp.c.obj
[5/12] Completed 'bootloader'
[6/12] Linking C static library esp-idf/sensor-xensiv-bgt60trxx/libsensor-xensiv-bgt60trxx.a
[7/12] Linking C static library esp-idf/main/libmain.a
[8/12] Generating ld/sections.ld
[9/12] Building C object CMakeFiles/esp-example-radar-presence.elf.dir/project_elf_src_esp32.c.obj
[10/12] Linking CXX executable esp-example-radar-presence.elf
[11/12] Generating binary image from built executable
esptool.py v4.7.dev3
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /Users/ahhyun/esp/esp-idf/examples/rd_esp32_code-example-presence-sensing/build/esp-example-radar-presence.bin
[12/12] cd /Users/ahhyun/esp/esp-idf/examples/rd_esp32_code-example-presence-sensing/build/esp-idf/esptool_py && /Users/ahhyun/.espressif/python_env/idf5.3_py3.12_env/bin/python /Users/ahhyun/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/ahhyun/esp/esp-idf/examples/rd_esp32_code-example-presence-sensing/build/partition_table/partition-table.bin /Users/ahhyun/esp/esp-idf/examples/rd_esp32_code-example-presence-sensing/build/esp-example-radar-presence.bin
esp-example-radar-presence.bin binary size 0x4b2c0 bytes. Smallest app partition is 0x100000 bytes. 0xb4d40 bytes (71%) free.
